//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputActions/PlayerControllerInputMapping.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControllerInputMapping: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControllerInputMapping()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControllerInputMapping"",
    ""maps"": [
        {
            ""name"": ""PlayerKeyBoard"",
            ""id"": ""4e90eca4-9d3c-4bdb-a7f0-d9875e19900d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""19c7818c-aa5e-4fcd-a112-c9963a0757e8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""fa850b94-9e3a-4f47-9ad9-49d8395166e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeFormat"",
                    ""type"": ""Button"",
                    ""id"": ""5b7af9b3-8582-409f-bf20-ba817e7df436"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousMove"",
                    ""type"": ""Value"",
                    ""id"": ""4ad87ab6-eb7e-4b77-aab9-e631d329ac86"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CallGuardians"",
                    ""type"": ""Button"",
                    ""id"": ""c436268b-444a-440f-9787-78e58a6d416d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AutoAttack"",
                    ""type"": ""Button"",
                    ""id"": ""42950cae-70c8-4ded-a87a-26391128d6df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CallHealing"",
                    ""type"": ""Button"",
                    ""id"": ""61266eba-2de7-47d8-b104-596656a2c79c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CallBackAttackers"",
                    ""type"": ""Button"",
                    ""id"": ""4c9aae3e-b4c2-4a8f-b8d7-4aa63f58680d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""e878552e-a311-4291-9436-273bc3a7319a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""5637b32e-ebfe-4eff-bdcc-7cfa9d38e9b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""301f1157-e718-4893-9c1d-acbe845cb061"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""718c7d91-4e22-429d-8c85-70b823c1fd79"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c0713910-cb7c-44f0-b822-ac78765955d8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""63ed0e6e-4dc3-4b6c-9901-3fec4eb41b22"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b50be6d1-2561-4d3c-8a33-60577dba1a91"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c37c8bff-929f-4f05-993b-0c5d178feabd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca640bc9-9339-49f7-9225-1ca7232248b9"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeFormat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d5b5b14-ce88-43f7-9eb9-0c01721b47ef"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c1508ee-4f72-45ea-a933-568356ca4858"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallGuardians"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef6455fa-3bc7-4951-9f51-12f3851845d5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AutoAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a87a333-a9fa-4694-8da0-ef29669c50d4"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallHealing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f8aa2e8-3304-489b-b56a-d687be415d07"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CallBackAttackers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bbe1730-d3f7-469a-87ca-214664e17da9"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07506e8e-65a4-4b76-acbf-204689063796"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerKeyBoard
        m_PlayerKeyBoard = asset.FindActionMap("PlayerKeyBoard", throwIfNotFound: true);
        m_PlayerKeyBoard_Movement = m_PlayerKeyBoard.FindAction("Movement", throwIfNotFound: true);
        m_PlayerKeyBoard_Attack = m_PlayerKeyBoard.FindAction("Attack", throwIfNotFound: true);
        m_PlayerKeyBoard_ChangeFormat = m_PlayerKeyBoard.FindAction("ChangeFormat", throwIfNotFound: true);
        m_PlayerKeyBoard_MousMove = m_PlayerKeyBoard.FindAction("MousMove", throwIfNotFound: true);
        m_PlayerKeyBoard_CallGuardians = m_PlayerKeyBoard.FindAction("CallGuardians", throwIfNotFound: true);
        m_PlayerKeyBoard_AutoAttack = m_PlayerKeyBoard.FindAction("AutoAttack", throwIfNotFound: true);
        m_PlayerKeyBoard_CallHealing = m_PlayerKeyBoard.FindAction("CallHealing", throwIfNotFound: true);
        m_PlayerKeyBoard_CallBackAttackers = m_PlayerKeyBoard.FindAction("CallBackAttackers", throwIfNotFound: true);
        m_PlayerKeyBoard_Dash = m_PlayerKeyBoard.FindAction("Dash", throwIfNotFound: true);
        m_PlayerKeyBoard_Exit = m_PlayerKeyBoard.FindAction("Exit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerKeyBoard
    private readonly InputActionMap m_PlayerKeyBoard;
    private List<IPlayerKeyBoardActions> m_PlayerKeyBoardActionsCallbackInterfaces = new List<IPlayerKeyBoardActions>();
    private readonly InputAction m_PlayerKeyBoard_Movement;
    private readonly InputAction m_PlayerKeyBoard_Attack;
    private readonly InputAction m_PlayerKeyBoard_ChangeFormat;
    private readonly InputAction m_PlayerKeyBoard_MousMove;
    private readonly InputAction m_PlayerKeyBoard_CallGuardians;
    private readonly InputAction m_PlayerKeyBoard_AutoAttack;
    private readonly InputAction m_PlayerKeyBoard_CallHealing;
    private readonly InputAction m_PlayerKeyBoard_CallBackAttackers;
    private readonly InputAction m_PlayerKeyBoard_Dash;
    private readonly InputAction m_PlayerKeyBoard_Exit;
    public struct PlayerKeyBoardActions
    {
        private @PlayerControllerInputMapping m_Wrapper;
        public PlayerKeyBoardActions(@PlayerControllerInputMapping wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerKeyBoard_Movement;
        public InputAction @Attack => m_Wrapper.m_PlayerKeyBoard_Attack;
        public InputAction @ChangeFormat => m_Wrapper.m_PlayerKeyBoard_ChangeFormat;
        public InputAction @MousMove => m_Wrapper.m_PlayerKeyBoard_MousMove;
        public InputAction @CallGuardians => m_Wrapper.m_PlayerKeyBoard_CallGuardians;
        public InputAction @AutoAttack => m_Wrapper.m_PlayerKeyBoard_AutoAttack;
        public InputAction @CallHealing => m_Wrapper.m_PlayerKeyBoard_CallHealing;
        public InputAction @CallBackAttackers => m_Wrapper.m_PlayerKeyBoard_CallBackAttackers;
        public InputAction @Dash => m_Wrapper.m_PlayerKeyBoard_Dash;
        public InputAction @Exit => m_Wrapper.m_PlayerKeyBoard_Exit;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyBoardActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerKeyBoardActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerKeyBoardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerKeyBoardActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @ChangeFormat.started += instance.OnChangeFormat;
            @ChangeFormat.performed += instance.OnChangeFormat;
            @ChangeFormat.canceled += instance.OnChangeFormat;
            @MousMove.started += instance.OnMousMove;
            @MousMove.performed += instance.OnMousMove;
            @MousMove.canceled += instance.OnMousMove;
            @CallGuardians.started += instance.OnCallGuardians;
            @CallGuardians.performed += instance.OnCallGuardians;
            @CallGuardians.canceled += instance.OnCallGuardians;
            @AutoAttack.started += instance.OnAutoAttack;
            @AutoAttack.performed += instance.OnAutoAttack;
            @AutoAttack.canceled += instance.OnAutoAttack;
            @CallHealing.started += instance.OnCallHealing;
            @CallHealing.performed += instance.OnCallHealing;
            @CallHealing.canceled += instance.OnCallHealing;
            @CallBackAttackers.started += instance.OnCallBackAttackers;
            @CallBackAttackers.performed += instance.OnCallBackAttackers;
            @CallBackAttackers.canceled += instance.OnCallBackAttackers;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Exit.started += instance.OnExit;
            @Exit.performed += instance.OnExit;
            @Exit.canceled += instance.OnExit;
        }

        private void UnregisterCallbacks(IPlayerKeyBoardActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @ChangeFormat.started -= instance.OnChangeFormat;
            @ChangeFormat.performed -= instance.OnChangeFormat;
            @ChangeFormat.canceled -= instance.OnChangeFormat;
            @MousMove.started -= instance.OnMousMove;
            @MousMove.performed -= instance.OnMousMove;
            @MousMove.canceled -= instance.OnMousMove;
            @CallGuardians.started -= instance.OnCallGuardians;
            @CallGuardians.performed -= instance.OnCallGuardians;
            @CallGuardians.canceled -= instance.OnCallGuardians;
            @AutoAttack.started -= instance.OnAutoAttack;
            @AutoAttack.performed -= instance.OnAutoAttack;
            @AutoAttack.canceled -= instance.OnAutoAttack;
            @CallHealing.started -= instance.OnCallHealing;
            @CallHealing.performed -= instance.OnCallHealing;
            @CallHealing.canceled -= instance.OnCallHealing;
            @CallBackAttackers.started -= instance.OnCallBackAttackers;
            @CallBackAttackers.performed -= instance.OnCallBackAttackers;
            @CallBackAttackers.canceled -= instance.OnCallBackAttackers;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Exit.started -= instance.OnExit;
            @Exit.performed -= instance.OnExit;
            @Exit.canceled -= instance.OnExit;
        }

        public void RemoveCallbacks(IPlayerKeyBoardActions instance)
        {
            if (m_Wrapper.m_PlayerKeyBoardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerKeyBoardActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerKeyBoardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerKeyBoardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerKeyBoardActions @PlayerKeyBoard => new PlayerKeyBoardActions(this);
    public interface IPlayerKeyBoardActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnChangeFormat(InputAction.CallbackContext context);
        void OnMousMove(InputAction.CallbackContext context);
        void OnCallGuardians(InputAction.CallbackContext context);
        void OnAutoAttack(InputAction.CallbackContext context);
        void OnCallHealing(InputAction.CallbackContext context);
        void OnCallBackAttackers(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
    }
}
